--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local library = loadstring(game:HttpGet("https://gist.githubusercontent.com/xNico013/22d6491ee1aa72bff4b81033d13ce853/raw/f4d0435df3ecc1165b92c2bd9a15ea12f3866e8d/Turtle%2520Hub"))()
local Tab1 = library:Window("Scripts")

game.StarterGui:SetCore("SendNotification", {
   Title = "Credits";
   Text = "Made By ameicaa, Press tab For Open/Close Gui";
   Icon = "";
   Duration = "6";
})

Tab1:Label("Fun Commands", Color3.fromRGB(127, 143, 166))

local toggled = false
local runningThread = nil
local connections = {}

Tab1:Toggle("Lag Server", false, function(state)
    toggled = state

    if toggled then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Note";
            Text = "This script is capable of crashing players, or even kicking them.";
            Icon = "";
            Duration = 6;
        })

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local camera = workspace.CurrentCamera
        local currentTarget = nil

        local function changeTarget()
            local others = {}
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= player then
                    table.insert(others, p)
                end
            end

            if #others > 0 then
                currentTarget = others[math.random(1, #others)]
                camera.CameraSubject = currentTarget.Character and currentTarget.Character:FindFirstChild("Humanoid")
            end
        end

        table.insert(connections, Players.PlayerRemoving:Connect(function(leavingPlayer)
            if leavingPlayer == currentTarget then
                changeTarget()
            end
        end))

        table.insert(connections, player.CharacterAdded:Connect(function(character)
            camera.CameraSubject = character:WaitForChild("Humanoid")
            currentTarget = nil
        end))

        changeTarget()
        repeat task.wait() until game:IsLoaded()

        -- Inicia thread
        runningThread = task.spawn(function()
            local nomeDoBotao = "FireX"
            local backpack = player:WaitForChild("Backpack")
            local humanoidRootPart = (player.Character or player.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")

            while toggled do
                -- Equipa ferramentas
                for _, item in ipairs(backpack:GetChildren()) do
                    if item:IsA("Tool") and item.Parent ~= player.Character then
                        item.Parent = player.Character
                    end
                end

                -- Atualiza humanoidRootPart se necessário
                if not humanoidRootPart or not humanoidRootPart:IsDescendantOf(game) then
                    humanoidRootPart = (player.Character or player.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")
                end

                -- Procura e clica no botão
                local botao = workspace:FindFirstChild(nomeDoBotao, true)
                if botao and botao:IsA("BasePart") then
                    humanoidRootPart.CFrame = botao.CFrame + Vector3.new(0, 3, 0)
                    local clickDetector = botao:FindFirstChildWhichIsA("ClickDetector")
                    if clickDetector then
                        fireclickdetector(clickDetector)
                        print("Botão clicado com sucesso!")
                    else
                        warn("ClickDetector não encontrado.")
                    end
                else
                    warn("Botão não encontrado.")
                end
                task.wait(0.0)
            end
        end)
    else
        -- Desliga conexões e limpa tudo
        for _, conn in pairs(connections) do
            conn:Disconnect()
        end
        connections = {}

        local player = game:GetService("Players").LocalPlayer
        local camera = workspace.CurrentCamera
        if player.Character then
            camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
        end

        toggled = false
    end
end)

Tab1:Button("0 Gravity Unanchored Things", function()
spawn(function()
while true do
game.Players.LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)*math.huge
game.Players.LocalPlayer.SimulationRadius = math.pow(math.huge,math.huge)*math.huge
game:GetService("RunService").Stepped:wait()
end
end)
local function zeroGrav(part)
   if part:FindFirstChild("BodyForce") then return end
   local temp = Instance.new("BodyForce")
   temp.Force = part:GetMass() * Vector3.new(0,workspace.Gravity,0)
   temp.Parent = part
end

for i,v in ipairs(workspace:GetDescendants()) do
   if v:IsA("Part") and v.Anchored == false then
       if not (v:IsDescendantOf(game.Players.LocalPlayer.Character)) then
           zeroGrav(v)
       end
   end
end

workspace.DescendantAdded:Connect(function(part)
   if part:IsA("Part") and part.Anchored == false then
       if not (part:IsDescendantOf(game.Players.LocalPlayer.Character)) then
           zeroGrav(part)
       end
   end
end)
end)

Tab1:Button("Bring Unanchored Bricks [E]", function()
local UserInputService = game:GetService("UserInputService")
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
local Folder = Instance.new("Folder", game:GetService("Workspace"))
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1
local Updated = Mouse.Hit + Vector3.new(0, 5, 0)
local NetworkAccess = coroutine.create(function()
  settings().Physics.AllowSleep = false
  while game:GetService("RunService").RenderStepped:Wait() do
      for _, Players in next, game:GetService("Players"):GetPlayers() do
          if Players ~= game:GetService("Players").LocalPlayer then
              Players.MaximumSimulationRadius = 0
              sethiddenproperty(Players, "SimulationRadius", 0)
          end
      end
      game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
      setsimulationradius(math.huge)
  end
end)
coroutine.resume(NetworkAccess)
local function ForcePart(v)
  if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
      Mouse.TargetFilter = v
      for _, x in next, v:GetChildren() do
          if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
              x:Destroy()
          end
      end
      if v:FindFirstChild("Attachment") then
          v:FindFirstChild("Attachment"):Destroy()
      end
      if v:FindFirstChild("AlignPosition") then
          v:FindFirstChild("AlignPosition"):Destroy()
      end
      if v:FindFirstChild("Torque") then
          v:FindFirstChild("Torque"):Destroy()
      end
      v.CanCollide = false
      local Torque = Instance.new("Torque", v)
      Torque.Torque = Vector3.new(100000, 100000, 100000)
      local AlignPosition = Instance.new("AlignPosition", v)
      local Attachment2 = Instance.new("Attachment", v)
      Torque.Attachment0 = Attachment2
      AlignPosition.MaxForce = 9999999999999999
      AlignPosition.MaxVelocity = math.huge
      AlignPosition.Responsiveness = 200
      AlignPosition.Attachment0 = Attachment2
      AlignPosition.Attachment1 = Attachment1
  end
end
for _, v in next, game:GetService("Workspace"):GetDescendants() do
  ForcePart(v)
end
game:GetService("Workspace").DescendantAdded:Connect(function(v)
  ForcePart(v)
end)
UserInputService.InputBegan:Connect(function(Key, Chat)
  if Key.KeyCode == Enum.KeyCode.E and not Chat then
     Updated = Mouse.Hit + Vector3.new(0, 5, 0)
  end
end)
spawn(function()
  while game:GetService("RunService").RenderStepped:Wait() do
      Attachment1.WorldCFrame = Updated
  end
end)
end)

Tab1:Label("Server-Side Play Music", Color3.fromRGB(127, 143, 166))

Tab1:Box("FE Play Sound", function(text, focuslost)
  if focuslost then
     local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = text
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    
end

playSound()
local args = {
    [1] = workspace,
    [2] = text,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end
end)

Tab1:Button("FE Scare All Players", function()

local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = 18406731725
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    

   end

playSound()
local args = {
    [1] = workspace,
    [2] = 18406731725,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab1:Label("Brookhaven Model Scripts", Color3.fromRGB(127, 143, 166))

Tab1:Button("UnMesh All Players", function()
-- Script de Voo sem GUI
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Flying = false
local Speed = 50  -- Velocidade de voo
local FlightHeight = 10  -- Altura do voo

-- Função para ativar/desativar o voo
local function toggleFlight()
    if not Flying then
        Flying = true
        local BodyVelocity = Instance.new("BodyVelocity")
        BodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        BodyVelocity.Velocity = Vector3.new(0, 0, 0)
        BodyVelocity.Parent = Character:WaitForChild("HumanoidRootPart")

        local BodyGyro = Instance.new("BodyGyro")
        BodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
        BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
        BodyGyro.Parent = Character:WaitForChild("HumanoidRootPart")

        -- Função de controle de voo
        local userInputService = game:GetService("UserInputService")
        local flyingDirection = Vector3.new(0, 0, 0)

        userInputService.InputChanged:Connect(function(input)
            if Flying then
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    if input.KeyCode == Enum.KeyCode.W then
                        flyingDirection = Vector3.new(0, 0, -Speed)
                    elseif input.KeyCode == Enum.KeyCode.S then
                        flyingDirection = Vector3.new(0, 0, Speed)
                    elseif input.KeyCode == Enum.KeyCode.A then
                        flyingDirection = Vector3.new(-Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.D then
                        flyingDirection = Vector3.new(Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.Space then
                        flyingDirection = Vector3.new(0, Speed, 0)
                    elseif input.KeyCode == Enum.KeyCode.LeftControl then
                        flyingDirection = Vector3.new(0, -Speed, 0)
                    end
                end
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)

        -- Manter a altura
        game:GetService("RunService").Heartbeat:Connect(function()
            if Flying then
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)
    end
end

-- Acionar o voo automaticamente
toggleFlight()

local args = {
    [1] = "RolePlayName",
    [2] = ""
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local currentTarget = nil


local function changeTarget()
    local others = {}
    
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(others, p)
        end
    end
    
    
    if #others > 0 then
        currentTarget = others[math.random(1, #others)]
        camera.CameraSubject = currentTarget.Character:FindFirstChild("Humanoid")
    end
end


Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == currentTarget then
        changeTarget()  
    end
end)


player.CharacterAdded:Connect(function(character)
    
    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
    currentTarget = nil  
end)


changeTarget()

local args = {
    [1] = 18658051550
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))

local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

-- Tempo entre os teletransportes (em segundos)
local intervalo = 0

-- O jogador que será teleportado
local jogadorAlvo = game.Players.LocalPlayer  -- Seu personagem, caso queira usar um jogador específico

-- Variável para controlar o loop
local loopAtivo = true

-- Função que teleporta o jogador para a frente de outro jogador aleatório
local function teleportToFrontOfRandomPlayer()
    -- Verifica se o jogador alvo tem um personagem válido
    if jogadorAlvo.Character and jogadorAlvo.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = jogadorAlvo.Character:FindFirstChild("HumanoidRootPart")
        
        -- Procura por outros jogadores no servidor
        local jogadores = game.Players:GetPlayers()
        local outrosJogadores = {}
        
        -- Exclui o jogador alvo da lista
        for _, jogador in ipairs(jogadores) do
            if jogador ~= jogadorAlvo and jogador.Character and jogador.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(outrosJogadores, jogador)
            end
        end
        
        -- Se houver jogadores para teleportar
        if #outrosJogadores > 0 then
            local jogadorAleatorio = outrosJogadores[math.random(1, #outrosJogadores)]
            local destino = jogadorAleatorio.Character:FindFirstChild("HumanoidRootPart")
            
            -- Teleporta o jogador alvo para a frente do jogador aleatório
            if destino then
                -- Obtém a posição do jogador aleatório e calcula a posição à frente dele
                local novaPosicao = destino.Position + destino.CFrame.LookVector * 0  -- 3 studs à frente do jogador aleatório
                
                -- Teleporta o jogador alvo para a nova posição
                humanoidRootPart.CFrame = CFrame.new(novaPosicao)
            end
        end
    end
end

-- Função para lidar com a reinicialização do personagem
local function onCharacterAdded(character)
    -- Quando o personagem for adicionado, reativa o loop de teletransporte
    loopAtivo = false
end

-- Função que para o loop quando o personagem for resetado
local function onCharacterRemoving()
    -- Quando o personagem for removido (morto ou resetado), desativa o loop
    loopAtivo = false
end

-- Conecta os eventos de morte e adição do personagem
jogadorAlvo.CharacterAdded:Connect(onCharacterAdded)
jogadorAlvo.CharacterRemoving:Connect(onCharacterRemoving)

-- Loop que chama a função a cada intervalo
while true do
    if loopAtivo then
        teleportToFrontOfRandomPlayer()  -- Teleporta o jogador alvo para a frente de outro jogador
    end
    wait(intervalo)  -- Espera o tempo definido antes de teleportar novamente
end
end)

Tab1:Button("StopUnMesh", function()
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ResetCharacterAppearance"):FireServer()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end

-- Defina as coordenadas desejadas
local destino = Vector3.new(432.58, -76.65, 97.99)  -- Altere os valores conforme necessário

-- Função para teletransportar o personagem
local function teleportarPersonagem()
    local jogador = game.Players.LocalPlayer  -- Obtém o jogador que está executando o script
    
    -- Verifica se o jogador está na partida
    if jogador and jogador.Character then
        local personagem = jogador.Character
        local humanoide = personagem:FindFirstChild("Humanoid")
        
        if humanoide then
            -- Teleporta o personagem para as coordenadas especificadas
            personagem:SetPrimaryPartCFrame(CFrame.new(destino))
        end
    end
end

-- Chama a função de teleporte
teleportarPersonagem()    
end)

Tab1:Button("Blown All Bombs Server", function()
local Players = game:GetService("Players")
local RE = game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Blo1wBomb1sServe1r")

for _, player in ipairs(Players:GetPlayers()) do
    local args = {
        [1] = "Bomb" .. player.Name
    }
    RE:FireServer(unpack(args))
end
end)

Tab1:Button("Horse Spam", function()
local args = {
    [1] = "HorseDismount"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

local tempoLimite = 1.7 -- Defina o tempo em segundos

local inicio = tick() -- Marca o início do tempo

while tick() - inicio < tempoLimite do
    local args = {
        [1] = "CharacterSizeDown",
        [2] = 1
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

    local personagem = game.Players.LocalPlayer.Character
    local altura = 2 -- Defina a altura para onde o personagem será teletransportado

    -- Verificar se o personagem existe
    if personagem then
        local posicaoAtual = personagem.HumanoidRootPart.Position
        local novaPosicao = Vector3.new(posicaoAtual.X, posicaoAtual.Y + altura, posicaoAtual.Z)
        
        -- Criar um CFrame com a nova posição e com a rotação voltada para cima
        local novaCFrame = CFrame.new(novaPosicao) * CFrame.Angles(math.rad(90), 0, 0)
        
        -- Teletransportar o personagem
        personagem:SetPrimaryPartCFrame(novaCFrame)
    end

    local args = {
        [1] = "HorseDismount"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))

    local args = {
        [1] = "PickingCar",
        [2] = "Horse"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

    local args = {
        [1] = "CharacterSizeUp",
        [2] = 1
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

    -- Aguardar 1 segundo antes de repetir
    wait(0.2) -- Pode ser ajustado para o intervalo de tempo entre as repetições
end
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

-- Após 2 segundos, destruir o script
script:

Destroy()
end)

Tab1:Label("Anti Byfron", Color3.fromRGB(127, 143, 166))

Tab1:Button("AntiKickV1", function()
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local PLACE_ID = game.PlaceId
local jobId = game.JobId

-- Verifica se o jogador foi desconectado por erro
game:GetService("GuiService").ErrorMessageChanged:Connect(function()
    -- Aguarda um pouco antes de tentar reconectar
    wait(0)
    pcall(function()
        -- Tenta teleportar de volta ao mesmo servidor
        TeleportService:TeleportToPlaceInstance(PLACE_ID, jobId, player)
    end)
end)

game.StarterGui:SetCore("SendNotification", {
   Title = "Actived!";
   Text = "You are protected from kicks.";
   Icon = "";
   Duration = "6";
})
end)

Tab1:Label("Character Scripts", Color3.fromRGB(127, 143, 166))

Tab1:Button("Big Character", function()
local args = {
    [1] = {
        [1] = 81881085814072,
        [2] = 79115019295211,
        [3] = 106740492797177,
        [4] = 81153927159685,
        [5] = 88668275797583,
        [6] = 115379341593655
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
end)

Tab1:Button("Big Head", function()
local args = {
    [1] = {
        [1] = 0,
        [2] = 0,
        [3] = 0,
        [4] = 0,
        [5] = 0,
        [6] = 115379341593655
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
end)

Tab1:Button("Naked Avatar", function()
local args = {
    [1] = 17584071085
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
local args = {
    [1] = 4626346449
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
end)

local Tab2 = library:Window("Scripts")

Tab2:Label("Admin Commands", Color3.fromRGB(127, 143, 166))
local Tab3 = library:Window("Spawn Cars")

Tab2:Button("Fire Avatar", function()
-- Substitua "Higher" pelo nome real do botão, se necessário
local nomeDoBotao = "Higher"

-- Aguarda o jogo carregar
repeat wait() until game:IsLoaded()

local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Salva posição e orientação originais
local posicaoOriginal = humanoidRootPart.CFrame
local cameraOriginal = camera.CFrame

-- Procura o botão
local botao = game:GetService("Workspace"):FindFirstChild(nomeDoBotao, true)

if botao and botao:IsA("BasePart") then
    -- Teleporta jogador até o botão
    humanoidRootPart.CFrame = botao.CFrame + Vector3.new(0, 3, 0)

    -- Fixa a câmera no lugar original
    camera.CameraType = Enum.CameraType.Scriptable
    camera.CFrame = cameraOriginal

    -- Acha o ClickDetector
    local clickDetector = botao:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then
        print("Iniciando cliques automáticos por 10 segundos...")

        -- Loop de clique por 10 segundos
        local tempoInicial = tick()
        while tick() - tempoInicial < 15 do
            fireclickdetector(clickDetector)
            wait(0.2)
        end

        -- Teleporta para um local temporário
        local destinoTemporario = Vector3.new(184.61, 7.12, 55.28)
        humanoidRootPart.CFrame = CFrame.new(destinoTemporario)
        wait(1) -- Espera 1 segundo no local temporário

        -- Retorna à posição original
        humanoidRootPart.CFrame = posicaoOriginal

        -- Restaura a câmera para o jogador
        camera.CameraType = Enum.CameraType.Custom
        print("Processo finalizado com sucesso.")
    else
        warn("ClickDetector não encontrado no botão.")
    end
else
    warn("Botão não encontrado!")
end
end)

Tab2:Box("Server Message", function(text, focuslost)
    if focuslost then
        -- Envia a mensagem inserida pelo usuário, com "r/" repetidos
        if game:GetService("TextChatService").ChatVersion == Enum.ChatVersion.TextChatService then
            game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync("i\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\ " .. text)
        end
    end
end)

local selectedUsers = {}

Tab2:Box("Admin Player", function(text, focuslost)
    if focuslost and text ~= "" then
        local name = text:lower():gsub("^%s*(.-)%s*$", "%1") -- remove espaços
        if not selectedUsers[name] then
            selectedUsers[name] = true
            game.StarterGui:SetCore("SendNotification", {
                Title = "Player is admin";
                Text = "Commands: ;scream, ;laugh, ;jumpscare all";
                Duration = 5;
            })
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Added";
                Text = text .. " is admin.";
                Duration = 3;
            })
        end
    end
end)

local function isSelectedUser(name)
    return selectedUsers[name:lower()] == true
end

local function playSoundById(soundId)
	local player = game.Players.LocalPlayer
	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://" .. soundId
	sound.Volume = 1
	sound.Looped = false
	sound.Parent = player:WaitForChild("PlayerGui")
	sound:Play()

	delay(3, function()
		sound:Destroy()
	end)
end

local function onChatted(plr)
	plr.Chatted:Connect(function(msg)
		if not isSelectedUser(plr.Name) then return end

		local msgLower = msg:lower()
		local soundMap = {
			[";laugh"] = 130759239,
			[";scream"] = 134211073313990,
			[";jumpscare all"] = 18406731725,
		}

		local soundId = soundMap[msgLower]
		if soundId then
			playSoundById(soundId)
			local args = {
				[1] = workspace,
				[2] = soundId,
				[3] = 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("RE"):FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
		end
	end)
end

-- Conecta para todos os jogadores existentes
for _, plr in ipairs(game.Players:GetPlayers()) do
	onChatted(plr)
end

-- Conecta para novos jogadores que entrarem depois
game.Players.PlayerAdded:Connect(onChatted)

Tab2:Box("Remove Admin Player", function(text, focuslost)
    if focuslost and text ~= "" then
        local name = text:lower():gsub("^%s*(.-)%s*$", "%1") -- remove espaços
        if selectedUsers[name] then
            selectedUsers[name] = nil
            game.StarterGui:SetCore("SendNotification", {
                Title = "Player Removed.";
                Text = text .. " is not admin more";
                Duration = 5;
            })
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Error";
                Text = text .. " this player is not in list";
                Duration = 3;
            })
        end
    end
end)

Tab2:Button("Fire Hand", function()
-- Substitua "Higher" pelo nome real do botão, se necessário
local nomeDoBotao = "PoolClick"

-- Aguarda o jogo carregar
repeat wait() until game:IsLoaded()

local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Salva posição e orientação originais
local posicaoOriginal = humanoidRootPart.CFrame
local cameraOriginal = camera.CFrame

-- Procura o botão
local botao = game:GetService("Workspace"):FindFirstChild(nomeDoBotao, true)

if botao and botao:IsA("BasePart") then
    -- Teleporta jogador até o botão
    humanoidRootPart.CFrame = botao.CFrame + Vector3.new(0, 3, 0)

    -- Fixa a câmera no lugar original
    camera.CameraType = Enum.CameraType.Scriptable
    camera.CFrame = cameraOriginal

    -- Acha o ClickDetector
    local clickDetector = botao:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then
        print("Iniciando cliques automáticos por 10 segundos...")

        -- Loop de clique por 10 segundos
        local tempoInicial = tick()
        while tick() - tempoInicial < 3 do
            fireclickdetector(clickDetector)
            wait(0.2)
        end

        -- Teleporta para um local temporário
        local destinoTemporario = Vector3.new(184.61, 7.12, 55.28)
        humanoidRootPart.CFrame = CFrame.new(destinoTemporario)
        wait(1) -- Espera 1 segundo no local temporário

        -- Retorna à posição original
        humanoidRootPart.CFrame = posicaoOriginal

        -- Restaura a câmera para o jogador
        camera.CameraType = Enum.CameraType.Custom
        print("Processo finalizado com sucesso.")
    else
        warn("ClickDetector não encontrado no botão.")
    end
else
    warn("Botão não encontrado!")
end
end)

Tab2:Button("C00lkidd Song", function()
local player = game.Players.LocalPlayer

local function playSound(soundId)
    wait(0.4)
    local volume = 1
    local pitch = 0.28
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.PlaybackSpeed = pitch
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    task.delay(3, function()
        sound:Destroy()
    end)

    -- Envia para o servidor
    local args = {
        [1] = workspace,
        [2] = soundId,
        [3] = pitch
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end

local soundIds = {
    104570724610975,
    91824290033214,
    98626162521082,
  114573847650036,
98527792396195,
 138003843805735,
82631331316597,
99247640743717,
95261884054124,

}

coroutine.wrap(function()
    for _, id in ipairs(soundIds) do
        playSound(id)
        wait(2.2) -- Espera 3 segundos antes de tocar o próximo som
    end
end)()
end)

Tab2:Button("Meepcity 4 Moan", function()
local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = 7129073354
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    

   end

playSound()
local args = {
    [1] = workspace,
    [2] = 7129073354,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = 134211073313990
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    

   end

playSound()
local args = {
    [1] = workspace,
    [2] = 134211073313990,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab2:Button("Obunga Jumpscare", function()
local player = game.Players.LocalPlayer

local function playSound(soundId)
wait(0.4)
local volume = 1
local pitch = 0.18
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://" .. soundId
sound.Volume = volume
sound.PlaybackSpeed = pitch
sound.Looped = false
sound.Parent = player:WaitForChild("PlayerGui")
sound:Play()

-- Aguarda 3 segundos antes de destruir o som  
task.delay(3, function()  
    sound:Destroy()  
end)  

-- Envia para o servidor  
local args = {  
    [1] = workspace,  
    [2] = soundId,  
    [3] = pitch  
}  
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

end

local soundIds = {
116261678102978,

}

coroutine.wrap(function()
for _, id in ipairs(soundIds) do
playSound(id)
wait(2.2) -- Espera 3 segundos antes de tocar o próximo som
end
end)()
wait (2.8)
local player = game.Players.LocalPlayer

local function playSound(soundId)
wait(0.4)
local volume = 1
local pitch = 1.4
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://" .. soundId
sound.Volume = volume
sound.PlaybackSpeed = pitch
sound.Looped = false
sound.Parent = player:WaitForChild("PlayerGui")
sound:Play()

-- Aguarda 3 segundos antes de destruir o som  
task.delay(3, function()  
    sound:Destroy()  
end)  

-- Envia para o servidor  
local args = {  
    [1] = workspace,  
    [2] = soundId,  
    [3] = pitch  
}  
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

end

local soundIds = {
2564305185,

}

coroutine.wrap(function()
for _, id in ipairs(soundIds) do
playSound(id)
wait(2.2) -- Espera 3 segundos antes de tocar o próximo som
end
end)()
end)

Tab2:Button("Tubers93 Intro", function()

local player = game.Players.LocalPlayer

local function playSound(soundId)
wait(0.4)
local volume = 1
local pitch = 1.1
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://" .. soundId
sound.Volume = volume
sound.PlaybackSpeed = pitch
sound.Looped = false
sound.Parent = player:WaitForChild("PlayerGui")
sound:Play()

-- Aguarda 3 segundos antes de destruir o som  
task.delay(3, function()  
    sound:Destroy()  
end)  

-- Envia para o servidor  
local args = {  
    [1] = workspace,  
    [2] = soundId,  
    [3] = pitch  
}  
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

end

local soundIds = {
103215672097028,

}

coroutine.wrap(function()
for _, id in ipairs(soundIds) do
playSound(id)
wait(2.2) -- Espera 3 segundos antes de tocar o próximo som
end
end)()
end)

Tab3:Label("Car Upgrade", Color3.fromRGB(127, 143, 166))

Tab3:Button("Rainbow Bike", function()
while true do
    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.002243518829345703, 1, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1) -- Espera 1 segundo antes de continuar (ajuste o tempo conforme necessário)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.1159353256225586, 0, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.956802487373352, 1, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.812100887298584, 0, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(1, 0.5107977986335754, 0.08215612173080444)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1) -- Espera 1 segundo antes de repetir tudo
end
end)

Tab3:Label("Instant Spawn Cars", Color3.fromRGB(127, 143, 166))

Tab3:Button("Cadillac", function()
local args = {
    [1] = "PickingCar",
    [2] = "Cadillac"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)






Tab3:Button("VWBus", function()
local args = {
    [1] = "PickingCar",
    [2] = "VWBus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("PoliceMotorcycle", function()
local args = {
    [1] = "PickingCar",
    [2] = "PoliceMotorcycle"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("Bus", function()
local args = {
    [1] = "PickingCar",
    [2] = "Bus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("Tank", function()
local args = {
    [1] = "PickingCar",
    [2] = "Tank"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("Smart Car", function()
local args = {
    [1] = "PickingCar",
    [2] = "SmartCar"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("GoKart", function()
local args = {
    [1] = "PickingCar",
    [2] = "GoKart"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("SchoolBus", function()
local args = {
    [1] = "PickingCar",
    [2] = "SchoolBus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Button("TowTruck", function()
local args = {
    [1] = "PickingCar",
    [2] = "TowTruck"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab3:Label("Car Settings", Color3.fromRGB(127, 143, 166))

Tab3:Box("Music Car", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "PickingCarMusicText",
    [2] = text
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
end
end)

Tab3:Button("Fire Car", function()
local args = {
    [1] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
end)

local Tab4 = library:Window("LocalPlayer")

Tab4:Button("FE Crown Head", function()
local args = {
    [1] = 4272833564
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
end)

Tab4:Slider("Walkspeed",16,120,0, function(value)
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
end)

Tab4:Slider("JumpPower",50,300,0, function(value)
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)

Tab4:Button("Rejoin Server", function()
game:GetService'TeleportService':TeleportToPlaceInstance(game.PlaceId,game.JobId,game:GetService'Players'.LocalPlayer)
end)

Tab4:Button("Reset Character", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end
end)

local Tab5 = library:Window("Give Tools To Yourself")

Tab5:Label("Give To Yourself", Color3.fromRGB(127, 143, 166))

local dropdown = Tab5:Dropdown("Give Yourself Item", {"Iphone", "Camcorder", "BabyBoy", "BabyGirl", "Wagon", "Sign", "Syringe", "Ear", "Trophy", "Taser", "SWATShield", "Cuffs", "Glock", "Shotgun", "Assault", "Sniper", "Bomb", "DuffleBagMoney", "Money", "CreditCardBoy", "CreditCardGirl", "Umbrella", "Roses", "Present", "SoccerBall", "Apple", "Chips", "Bloxaide", "Milk",}, function(name)
local args = {
    [1] = "PickingTools",
    [2] = name
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
end)

library:Keybind("Tab")